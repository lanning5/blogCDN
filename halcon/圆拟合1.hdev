<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.2" halcon_version="18.11.0.1">
<procedure name="main">
<interface/>
<body>
<c as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,1]" as_ord="1">* Image Acquisition 01: Code generated by Image Acquisition 01</c>
<l>dev_update_window ('off')</l>
<l>dev_close_window()</l>
<c></c>
<l>read_image (Image, 'D:/image/新建文件夹/0.bmp.tif')</l>
<l>get_image_size (Image, Width, Height)</l>
<l>dev_open_window_fit_image (Image, 0, 0, Width/10, Height/10, WindowID)</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,2]" as_ord="1">list_files ('D:/image/新建文件夹/', ['files','follow_links'], ImageFiles)</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,3]" as_ord="1">tuple_regexp_select (ImageFiles, ['\\.(tif|tiff|gif|bmp|jpg|jpeg|jp2|png|pcx|pgm|ppm|pbm|xwd|ima|hobj)$','ignore_case'], ImageFiles)</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,2]" as_ord="1">for Index := 0 to |ImageFiles| - 1 by 1</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,3]" as_ord="1">    read_image (Image, ImageFiles[Index])</l>
<c as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,4]" as_ord="1">    * Image Acquisition 01: Do something</c>
<c>    </c>
<l>    threshold (Image, Regions, 5, 244)</l>
<l>    connection (Regions, ConnectedRegions)</l>
<c>    </c>
<l>    select_shape (ConnectedRegions, SelectedRegions, 'area', 'and', 35403.7, 43119.6)</l>
<l>    union1 (SelectedRegions, RegionUnion)</l>
<l>    smallest_rectangle2 (RegionUnion, Row, Column, Phi, Length1, Length2)</l>
<l>    gen_rectangle2 (Rectangle, Row, Column, Phi, Length1, Length2)</l>
<l>    reduce_domain (Image, Rectangle, ImageReduced)</l>
<c>    </c>
<c>    * 筛选区域里圆</c>
<l>    threshold (ImageReduced, Regions1, 10, 251)</l>
<l>    connection (Regions1, ConnectedRegions1)</l>
<l>    select_shape (ConnectedRegions1, SelectedRegions1, 'area', 'and', 5539.87, 7800.05)</l>
<l>    sort_region (SelectedRegions1, SortedRegions, 'upper_left', 'true', 'column')</l>
<c>    </c>
<c>    * 左圆</c>
<l>    select_obj (SortedRegions, ObjectSelected, [1,2,3,4])</l>
<l>    union1 (ObjectSelected, RegionUnion1)</l>
<l>    smallest_circle (RegionUnion1, Row1, Column1, Radius)</l>
<c>    </c>
<l>    create_metrology_model (MetrologyHandle)</l>
<l>    add_metrology_object_generic (MetrologyHandle, 'circle', [Row1, Column1, Radius-31], 12, 5, 1, 30, [], [], Index1)</l>
<l>    apply_metrology_model (Image, MetrologyHandle)</l>
<l>    get_metrology_object_measures (Contours, MetrologyHandle, 'all', 'all', Row2, Column2)</l>
<c>    </c>
<l>    gen_contour_polygon_xld (Contour, Row2, Column2)</l>
<l>    fit_circle_contour_xld (Contour, 'algebraic', -1, 0, 0, 3, 2, Row3, Column3, Radius1, StartPhi, EndPhi, PointOrder)</l>
<l>    gen_circle_contour_xld (ContCircle, Row3, Column3, Radius1, 0, 6.28, 'positive', 1)</l>
<l>    gen_cross_contour_xld (Cross3, Row3, Column3, 160, rad(45))</l>
<c>    </c>
<c>    * 右圆</c>
<l>    select_obj (SortedRegions, ObjectSelected1, [5,6,7,8])</l>
<l>    union1 (ObjectSelected1, RegionUnion2)</l>
<l>    smallest_circle (RegionUnion2, Row4, Column4, Radius2)</l>
<c>    </c>
<l>    create_metrology_model (MetrologyHandle1)</l>
<l>    add_metrology_object_generic (MetrologyHandle1, 'circle', [Row4, Column4, Radius2-31], 12, 5, 1, 30, [], [], Index2)</l>
<l>    apply_metrology_model (Image, MetrologyHandle1)</l>
<l>    get_metrology_object_measures (Contours1, MetrologyHandle1, 'all', 'all', Row5, Column5)</l>
<c>    </c>
<l>    gen_contour_polygon_xld (Contour1, Row5, Column5)</l>
<l>    fit_circle_contour_xld (Contour1, 'algebraic', -1, 0, 0, 3, 2, Row6, Column6, Radius3, StartPhi1, EndPhi1, PointOrder1)</l>
<l>    gen_circle_contour_xld (ContCircle1, Row6, Column6, Radius3, 0, 6.28, 'positive', 1)</l>
<l>    gen_cross_contour_xld (Cross4, Row6, Column6, 160, rad(45))</l>
<c></c>
<c>    * 中心点</c>
<l>    threshold (ImageReduced, Regions1, 36, 190)</l>
<l>    connection (Regions1, ConnectedRegions1)</l>
<c>    </c>
<l>    select_shape (ConnectedRegions1, SelectedRegions1, ['area','outer_radius'], 'and', [25830.1,376.43], [31641.1,500])</l>
<l>    edges_sub_pix (ImageReduced, Edges, 'canny', 1, 20, 40)</l>
<l>    segment_contours_xld (Edges, ContoursSplit, 'lines_circles', 5, 4, 2)</l>
<c>    </c>
<l>    select_shape_xld (ContoursSplit, SelectedXLD, 'contlength', 'and', 50.45, 1000)</l>
<l>    union_collinear_contours_xld (SelectedXLD, UnionContours, 720, 1.5, 2, 0.1, 'attr_keep')</l>
<c>    * 筛选直线</c>
<l>    select_shape_xld (UnionContours, SelectedXLD1, ['contlength','circularity'], 'and', [1465.06,0], [1731.89,0.05051])</l>
<l>    sort_contours_xld (SelectedXLD1, SortedContours, 'upper_left', 'true', 'row')</l>
<l>    sort_contours_xld (SelectedXLD1, SortedContours3, 'lower_left', 'false', 'row')</l>
<c>    </c>
<c>    * 上下边缘</c>
<l>    select_obj (SortedContours, ObjectSelected, 1)</l>
<l>    fit_line_contour_xld (ObjectSelected, 'tukey', -1, 0, 5, 2, RowBegin, ColBegin, RowEnd, ColEnd, Nr, Nc, Dist)</l>
<c>    </c>
<l>    select_obj (SortedContours3, ObjectSelected1, 1)</l>
<l>    fit_line_contour_xld (ObjectSelected1, 'tukey', -1, 0, 5, 2, RowBegin1, ColBegin1, RowEnd1, ColEnd1, Nr1, Nc1, Dist1)</l>
<c>    </c>
<l>    projection_pl (RowBegin, ColBegin, RowBegin1, ColBegin1, RowEnd1, ColEnd1, RowProj, ColProj)</l>
<l>    projection_pl (RowEnd, ColEnd, RowBegin1, ColBegin1, RowEnd1, ColEnd1, RowProj1, ColProj1)</l>
<c>    </c>
<l>    CenterRow := (RowBegin+RowProj)/2</l>
<l>    CenterCol := (ColBegin+ColProj)/2</l>
<l>    CenterRow1 := (RowEnd+RowProj1)/2</l>
<l>    CenterCol1 := (ColEnd+ColProj1)/2</l>
<l>    gen_region_line (RegionLines, CenterRow, CenterCol, CenterRow1, CenterCol1)</l>
<c>    </c>
<c>    * 筛选圆弧</c>
<l>    select_shape_xld (SelectedXLD, SelectedXLD2, ['contlength','circularity'], 'and', [178.53,0.10976], [1000,0.41709])</l>
<c>    </c>
<c>    * 左圆弧</c>
<l>    sort_contours_xld (SelectedXLD2, SortedContours1, 'upper_left', 'true', 'column')</l>
<l>    select_obj (SortedContours1, ObjectSelected2, 1)</l>
<c>    </c>
<c>    * 右圆弧</c>
<l>    sort_contours_xld (SelectedXLD2, SortedContours2, 'upper_right', 'false', 'column')</l>
<l>    select_obj (SortedContours2, ObjectSelected3, 1)</l>
<c>    * 交点</c>
<l>    intersection_line_contour_xld (ObjectSelected2, CenterRow, CenterCol, CenterRow1, CenterCol1, Row1, Column1, IsOverlapping)</l>
<l>    intersection_line_contour_xld (ObjectSelected3, CenterRow, CenterCol, CenterRow1, CenterCol1, Row2, Column2, IsOverlapping1)</l>
<c></c>
<l>    gen_cross_contour_xld (Cross, Row1, Column1, 166, rad(45))</l>
<l>    gen_cross_contour_xld (Cross1, Row2, Column2, 166, rad(45))</l>
<l>    RowCenter := (Row1+Row2)/2</l>
<l>    ColCenter := (Column1+Column2)/2</l>
<l>    gen_cross_contour_xld (Cross2, RowCenter, ColCenter, 166, rad(45))</l>
<l>    dev_display (Image)</l>
<l>    disp_continue_message (WindowID, 'black', 'true') </l>
<l>    stop ()</l>
<c>    </c>
<l>    dev_set_line_width (1)</l>
<l>    dev_set_color ('red')</l>
<c> </c>
<l>    dev_set_colored (12)</l>
<l>    dev_display (Cross2)</l>
<l>    dev_display (ObjectSelected2)</l>
<l>    dev_display (ObjectSelected3)</l>
<l>    dev_display (ObjectSelected)</l>
<l>    dev_display (ObjectSelected1)</l>
<l>    dev_display (RegionLines)</l>
<l>    dev_display (Cross3)</l>
<l>    dev_display (Cross4)</l>
<c>    </c>
<l>*     dev_display (Contours1)</l>
<l>    dev_display (ContCircle1)</l>
<l>*     dev_display (Contours)</l>
<l>    dev_display (ContCircle)</l>
<l>    disp_continue_message (WindowID, 'black', 'true') </l>
<l>    stop ()</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[3,1]" as_ord="1">endfor</l>
<l>dev_update_window ('on')</l>
<l>dev_clear_window ()</l>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
